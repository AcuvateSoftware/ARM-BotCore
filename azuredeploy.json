{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "BotCore App Service Plan": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Please enter the name of app service plan that will host the BotCore Runtime & Admin Service."
      }
    },
    "BotCore App Service Plan SKU": {
      "type": "string",
      "defaultValue": "B2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Select the type of the App Service plan"
      }
    },
    "BotCore Runtime Web App": {
      "type": "string",
      "defaultValue": "ACU-BOT-ABS-DEV",
      "metadata": { "description": "Name of BotCore runtime Web App. This will be used while creating the Azure Bot Service." }
    },
    "BotCore Admin Service Web App": {
      "type": "string",
      "defaultValue": "ACU-BOT-ABS-DEV",
      "metadata": { "description": "Name of BotCore runtime Web App. This will be used while creating the Azure Bot Service." }
    },
    "Storage": {
      "type": "string",
      "defaultValue": "acubotstoragedev",
      "metadata": { "description": "Please enter the name of Storage account (only lower case alphabets and numbers). This will be used while creating the Azure Bot Service." }
    },
    "Storage Type": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Select the type of the storage"
      }
    },
    "Redis Cache": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ACU-BOT-RC-DEV",
      "metadata": {
        "description": "Please enter the name of Redis Cache that will be used by BotCore for short term memory."
      }
    },
    "Redis Cache SKU Family": {
      "type": "string",
      "allowedValues": [
        "C",
        "P"
      ],
      "defaultValue": "C",
      "metadata": {
        "description": "Select the type of the cache family (C = Basic/Standard, P = Premium)"
      }
    },
    "Redis Cache SKU": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "Select the type of the cache."
      }
    },
    "Redis Cache SKU Capacity": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "metadata": {
        "description": "The size of the Redis cache to deploy. Valid values for C family are 0, 1, 2, 3, 4, 5, 6 & for P family are 1, 2, 3, 4."
      }
    },
    "Redis Cache Redis Version": {
      "type": "string",
      "allowedValues": [
        "2.8"
      ],
      "defaultValue": "2.8",
      "metadata": {
        "description": "Version of Redis Cache."
      }
    },
    "BotCore DB Server": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "acubotsqlserverdev",
      "metadata": {
        "description": "Please enter the name of the database server for BotCore Operational DB."
      }
    },
    "DB Server Username": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "acubotdbadmin",
      "metadata": {
        "description": "Please enter the admin login id for DB Server."
      }
    },
    "DB Server Password": {
      "type": "securestring",
      "metadata": {
        "description": "Please enter the admin password for DB Server. Password should contain 8 characters, atleast one number,one special character and a lowercase and uppercase letter."
      }
    },
    "BotCore Operational DB": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ACU-BOT-SQL-DEV",
      "metadata": {
        "description": "Please enter the name for the BotCore Operational Database."
      }
    },
    "SQL Database Collation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "BotCore Operational DB Edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Select the type of the DB edition."
      }
    },
    "SQL Database Requested SOM": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Select the plan for the DB based on the Edition (Basic = Basic | Standard = S0,S1,S2 | Premium = P1,P2,P3)."
      }
    },
    "BotCore operational Data Factory": {
      "type": "string",
      "metadata": {
        "description": "Please enter the name of Data Factory that will be used by BotCore to create, schedule and manage your data integration at scale."
      }
    },
    "DF location": {
      "type": "string",
      "allowedValues": [
        "East US",
        "East US 2",
        "North Europe",
        "Southeast Asia",
        "UK South",
        "West Central US",
        "West Europe",
        "West US",
        "West US 2"
      ],
      "metadata": {
        "description": "Select the location for the BotCore operational Data Factory"
      }
    },
    "DF Version": {
      "type": "string",
      "allowedValues": [
        "2015-10-01",
        "2015-09-01",
        "2015-08-01",
        "2015-07-01-preview",
        "2015-05-01-preview",
        "2014-10-01-preview",
        "2014-04-01"
      ],
      "metadata": { "description": "Bot operational Data Factory version." }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": { "description": "Enter the environment of the bot" }
    },
    "Bot- Id": {
      "type": "string",
      "metadata": { "description": "Enter the preferred id for the bot" }
    },
    "Location": {
      "type": "string",
      "metadata": { "description": "Enter the preferred bot location" }
    },
    "SKU": {
      "type": "string",
      "allowedValues": [ "F0", "S1" ],
      "metadata": { "description": "Describes the pricing tier and capacity of the bot service." }
    },
    "Kind": {
      "type": "string",
      "allowedValues": [
        "sdk",
        "bot"
      ],
      "metadata": { "description": "Enter the SKU kind of the bot" }
    },
    "Web App- Name": {
      "type": "string",
      "metadata": { "description": "This determines the endpoint of the bot." }
    },
    "App id": {
      "type": "string",
      "metadata": { "description": "Enter a valid GUID as App id" }
    },
    "Endpoint": {
      "type": "string",
      "defaultValue": ""
    },
    "Cognitive service- Name": {
      "type": "string",
      "metadata": { "description": "Please enter the preferred name for cognitive service." }
    },
    "Cognitive service- Location": {
      "type": "string",
      "allowedValues": [
        "Australia East",
        "Brazil South",
        "East Asia",
        "North Europe",
        "Southest Asia",
        "West Europe",
        "West US",
        "West US2"
      ],
      "metadata": { "description": "Please enter the preferred location for cognitive services." }
    },
    "Cognitive service- Type": {
      "type": "string",
      "allowedValues": [
        "LUIS",
        "Bing.Speech"
      ],
      "metadata": { "description": "Please enter the type of cognitive service" }
    },
    "Cognitive service- Sku": {
      "type": "string",
      "metadata": { "description": "Describes the pricing tier and capacity of the service." }
    },
    "Resource group- Name": {
      "type": "string",
      "metadata": { "description": "Please re- enter the name of resource group here." }
    },
    "Function app- Name": {
      "type": "string",
      "metadata": { "description": "Enter the name of the funtion app." }
    },
    "Storage account- Name": {
      "type": "string",
      "metadata": { "description": "Enter the name of the storage account." }
    },
    "Function app- Location": {
      "type": "string",
      "metadata": { "description": "Enter the prefered location of the function app." }
    },
    "Subscription id": {
      "type": "string",
      "metadata": { "description": "Enter the subscription id of the resource group." }
    }

  },
  "variables": {
    "myWorkerSize": 0,
    "proactiveFunctionName": "[concat(parameters('Web App- Name'), '-function')]",
    "insightsName": "[concat(parameters('Bot- Id'), substring(uniqueString(resourceGroup().id), 0, 6))]",
    "config": {
      "scratch": {
        "stateEndpoint": "https://intercom-api-scratch.azurewebsites.net",
        "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.scratch.botframework.com/",
        "openIdMetadata": "https://intercom-api-ppe.azurewebsites.net/v1/.well-known/openidconfiguration"
      },
      "ppe": {
        "stateEndpoint": "https://intercom-api-ppe.azurewebsites.net",
        "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.ppe.botframework.com/",
        "openIdMetadata": "https://intercom-api-ppe.azurewebsites.net/v1/.well-known/openidconfiguration"
      },
      "prod": {
        "stateEndpoint": "",
        "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.botframework.com/",
        "openIdMetadata": ""
      },
      "usgovppe": {
        "stateEndpoint": "",
        "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.ppe.botframework.azure.us/",
        "openIdMetadata": "https://api.ppe.botframework.azure.us/v1/.well-known/openidconfigurationn"
      },
      "usgovprd": {
        "stateEndpoint": "",
        "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.botframework.azure.us/",
        "openIdMetadata": "https://api.botframework.azure.us/v1/.well-known/openidconfiguration"
      }
    },
    "botAppKinds": {
      "function": "functionapp",
      "sdk": "app",
      "designer": "app",
      "bot": ""
    },
    "botAppKind": "[variables('botAppKinds')[parameters('kind')]]",
    "currentConfig": "[variables('config')[toLower(parameters('Environment'))]]",
    "siteHost": "[concat(parameters('Web App- Name'), '.azurewebsites.net')]",
    "botEndpointConfig": {
      "bot": "[parameters('endpoint')]",
      "sdk": "[concat('https://', variables('siteHost'), '/api/messages')]",
      "designer": "[concat('https://', variables('siteHost'), '/api/messages')]",
      "function": "[concat('https://', variables('siteHost'), '/api/messages?code=', 'NYI')]"
    },
    "botEndpoint": "[variables('botEndpointConfig')[parameters('kind')]]",
    "luisApiName": "",
    "luisApiResId": "[resourceId('Microsoft.CognitiveServices/accounts/', variables('luisApiName'))]"
  },
  "resources": [
    {
      "name": "[parameters('BotCore App Service Plan')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "sku": {
        "name": "[parameters('BotCore App Service Plan SKU')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "App Service Plan"
      },
      "properties": {
        "name": "[parameters('BotCore App Service Plan')]",
        "numberOfWorkers": 1
      }
    },
    {
      "name": "[parameters('Storage')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('Storage Type')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "Storage"
      },
      "kind": "Storage",
      "resources": [
        {
          "apiVersion": "2017-05-10",
          "name": "nestedTemplate",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": [
                {
                  "apiVersion": "2016-03-01",
                  "name": "[parameters('Function app- Name')]",
                  "type": "Microsoft.Web/sites",
                  "properties": {
                    "name": "[parameters('Function app- Name')]",
                    "siteConfig": {
                      "appSettings": [
                        {
                          "name": "FUNCTIONS_WORKER_RUNTIME",
                          "value": "dotnet"
                        },
                        {
                          "name": "AzureWebJobsStorage",
                          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('Storage account- Name'),';AccountKey=',listKeys(resourceId(parameters('Subscription id'),parameters('Resource group- Name'),'Microsoft.Storage/storageAccounts', parameters('Storage account- Name')), '2015-05-01-preview').key1)]"
                        },
                        {
                          "name": "FUNCTIONS_EXTENSION_VERSION",
                          "value": "~2"
                        },
                        {
                          "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                          "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('Storage account- Name'),';AccountKey=',listKeys(resourceId(parameters('Subscription id'),parameters('Resource group- Name'),'Microsoft.Storage/storageAccounts', parameters('Storage account- Name')), '2015-05-01-preview').key1)]"
                        },
                        {
                          "name": "WEBSITE_CONTENTSHARE",
                          "value": "[concat(toLower(parameters('Storage account- Name')), '8875')]"
                        },
                        {
                          "name": "WEBSITE_NODE_DEFAULT_VERSION",
                          "value": "8.11.1"
                        }
                      ]
                    },
                    "clientAffinityEnabled": false,
                    "reserved": false
                  },
                  "location": "[parameters('Function app- Location')]",
                  "kind": "functionapp"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "[parameters('Redis Cache')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-01",
      "dependsOn": [],
      "tags": {
        "displayName": "Redis Cache"
      },
      "properties": {
        "sku": {
          "name": "[parameters('Redis Cache SKU')]",
          "family": "[parameters('Redis Cache SKU Family')]",
          "capacity": "[parameters('Redis Cache SKU Capacity')]"
        },
        "redisVersion": "[parameters('Redis Cache Redis Version')]"
      }
    },
    {
      "name": "[parameters('BotCore DB Server')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "bot-operational-server"
      },
      "properties": {
        "administratorLogin": "[parameters('DB Server Username')]",
        "administratorLoginPassword": "[parameters('DB Server Password')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('BotCore DB Server'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[parameters('BotCore Operational DB')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('BotCore DB Server'))]"
          ],
          "tags": {
            "displayName": "SQL Database"
          },
          "properties": {
            "collation": "[parameters('SQL Database Collation')]",
            "edition": "[parameters('BotCore Operational DB Edition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('SQL Database Requested SOM')]"
          }
        }
      ]
    },
    {
      "name": "[parameters('BotCore Runtime Web App')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan')))]": "Resource",
        "displayName": "Web App"
      },
      "properties": {
        "name": "[parameters('BotCore Runtime Web App')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan'))]"
      },
      "resources": [
        {
          "apiVersion": "2017-05-10",
          "name": "nestedTemplate",
          "type": "Microsoft.Resources/deployments",
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": [
                {
                  "name": "[parameters('Web App- Name')]",
                  "type": "Microsoft.Web/sites",
                  "apiVersion": "2015-08-01",
                  "location": "[parameters('location')]",
                  "kind": "[variables('botAppKind')]",
                  "properties": {
                    "name": "[parameters('Web App- Name')]",
                    "siteConfig": {
                      "appSettings": [
                        {
                          "name": "botFilePath",
                          "value": "[concat('./', parameters('Bot- Id'), '.bot')]"
                        }
                      ],
                      "cors": {
                        "allowedOrigins": [
                          "https://botservice.hosting.portal.azure.net",
                          "https://hosting.onecloud.azure-test.net/"
                        ]
                      }
                    }
                  }
                },
                {
                  "apiVersion": "2016-03-01",
                  "type": "Microsoft.Web/sites",
                  "name": "[variables('proactiveFunctionName')]",
                  "location": "[parameters('location')]",
                  "kind": "functionapp",
                  "properties": {
                    "siteConfig": {
                      "appSettings": [
                        {
                          "name": "WEBSITE_CONTENTSHARE",
                          "value": "[toLower(variables('proactiveFunctionName'))]"
                        },
                        {
                          "name": "FUNCTIONS_EXTENSION_VERSION",
                          "value": "~1"
                        },
                        {
                          "name": "AzureWebJobsBotFrameworkDirectLineEndpoint",
                          "value": "[variables('currentConfig').azureWebJobsBotFrameworkDirectLineEndpoint]"
                        }
                      ]
                    }
                  }
                },
                {
                  "apiVersion": "2017-12-01",
                  "type": "Microsoft.BotService/botServices",
                  "name": "[parameters('Bot- Id')]",
                  "location": "global",
                  "kind": "[parameters('kind')]",
                  "sku": {
                    "name": "[parameters('sku')]"
                  },
                  "properties": {
                    "name": "[parameters('Bot- Id')]",
                    "displayName": "[parameters('Bot- Id')]",
                    "endpoint": "[variables('botEndpoint')]",
                    "msaAppId": "[parameters('App id')]",
                    "publishingCredentials": "[list(concat(resourceId('Microsoft.Web/Sites', parameters('Web App- Name')), '/config/publishingcredentials'), '2018-02-01')]",
                    "parameters": "[union(deployment().properties.parameters, json(concat('{\"tenant\":{\"value\":\"', subscription().tenantId, '\"}}')), json(concat('{\"stateStorage\":{\"value\":\"DefaultEndpointsProtocol=https;AccountName=',';\"}}')))]",
                    "allSettings": {
                      "WEBSITE_NODE_DEFAULT_VERSION": "8.9.4",
                      "BotEnv": "[parameters('Environment')]",
                      "BotId": "[parameters('Bot- Id')]",
                      "MicrosoftAppId": "[parameters('App id')]",
                      "BotStateEndpoint": "[variables('currentConfig').stateEndpoint]",
                      "BotOpenIdMetadata": "[variables('currentConfig').openIdMetadata]",
                      "UseTableStorageForConversationState": "true",
                      "botFilePath": "[concat('./', parameters('Bot- Id'), '.bot')]",
                      "LuisAPIKey": "374ee135421e45db8420cbec05e02bd9",
                      "LuisAppId": "dab3bae8-e0f4-4ce2-ae5e-48acc5962edd",
                      "LuisAPIHostName": "westus.api.cognitive.microsoft.com"
                    }
                  },
                  "dependsOn": [
                    "[resourceId('Microsoft.Web/sites/', parameters('Web App- Name'))]",
                    "MSDeploy"
                  ]
                }
              ]
            }
        },
            {
              "name": "[parameters('BotCore Admin Service Web App')]",
              "type": "Microsoft.Web/sites",
              "location": "[resourceGroup().location]",
              "apiVersion": "2015-08-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan'))]"
              ],
              "tags": {
                "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan')))]": "Resource",
                "displayName": "Web App"
              },
              "properties": {
                "name": "[parameters('BotCore Admin Service Web App')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('BotCore App Service Plan'))]"
              }
            },
            {
              "apiVersion": "[parameters('DF Version')]",
              "name": "[parameters('BotCore operational Data Factory')]",
              "location": "[parameters('DF location')]",
              "type": "Microsoft.DataFactory/dataFactories",
              "properties": {}
            },
            {
              "apiVersion": "2017-04-18",
              "name": "[parameters('Cognitive service- Name')]",
              "location": "[parameters('Cognitive service- Location')]",
              "type": "Microsoft.CognitiveServices/accounts",
              "kind": "[parameters('Cognitive service- Type')]",
              "sku": {
                "name": "[parameters('Cognitive service- Sku')]"
              },
              "properties": {}
            },
            {
              "apiVersion": "2018-02-01",
              "name": "pid-a3aa5d37-04e6-44fe-a72a-5f823188b6d3",
              "type": "Microsoft.Resources/deployments",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },

            "outputs": {}
          }
